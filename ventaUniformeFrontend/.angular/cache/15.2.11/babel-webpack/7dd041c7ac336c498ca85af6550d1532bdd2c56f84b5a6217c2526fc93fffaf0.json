{"ast":null,"code":"import _asyncToGenerator from \"/home/bsvanegas/Documents/Workspace/deporte/ventaUniformeFrontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet RegistroPersonaComponent = class RegistroPersonaComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.respuesta = {\n      message: '',\n      state: ''\n    };\n    this.personaForm = new FormGroup({\n      id: new FormControl('', Validators.required),\n      nombre: new FormControl('', Validators.required),\n      apellido: new FormControl('', Validators.required),\n      celular: new FormControl(''),\n      correo: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(8)])\n    });\n  }\n  ngOnInit() {}\n  registrar() {\n    var _this = this;\n    this.authService.registrar(this.personaForm.value).subscribe( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (token) {\n        _this.respuesta.message = \"Cuenta creada correctamente\";\n        _this.respuesta.state = \"success\";\n        _this.router.navigateByUrl('/inicio-session');\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(), error => {\n      this.respuesta.message = \"Error no se pudo crear la cuenta\";\n      this.respuesta.state = \"danger\";\n    });\n  }\n};\nRegistroPersonaComponent = __decorate([Component({\n  selector: 'app-registro-persona',\n  templateUrl: './registro-persona.component.html',\n  styleUrls: ['./registro-persona.component.css']\n})], RegistroPersonaComponent);\nexport { RegistroPersonaComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAW5D,IAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAOnCC,YACSC,WAAuB,EACtBC,MAAa;IADd,gBAAW,GAAXD,WAAW;IACV,WAAM,GAANC,MAAM;IAPhB,cAAS,GAAY;MACnBC,OAAO,EAAC,EAAE;MACVC,KAAK,EAAC;KACP;IAOD,gBAAW,GAAC,IAAIP,SAAS,CAAC;MACxBQ,EAAE,EAAC,IAAIT,WAAW,CAAC,EAAE,EAACE,UAAU,CAACQ,QAAQ,CAAC;MAC1CC,MAAM,EAAC,IAAIX,WAAW,CAAC,EAAE,EAACE,UAAU,CAACQ,QAAQ,CAAC;MAC9CE,QAAQ,EAAC,IAAIZ,WAAW,CAAC,EAAE,EAACE,UAAU,CAACQ,QAAQ,CAAC;MAChDG,OAAO,EAAC,IAAIb,WAAW,CAAC,EAAE,CAAC;MAC3Bc,MAAM,EAAC,IAAId,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACa,KAAK,CAAC,CAAC;MAClEC,QAAQ,EAAC,IAAIhB,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACe,SAAS,CAAC,CAAC,CAAC,CAAC;KAC3E,CAAC;EATA;EAWFC,QAAQ,IACR;EAEAC,SAAS;IAAA;IACL,IAAI,CAACd,WAAW,CAACc,SAAS,CAAC,IAAI,CAACC,WAAW,CAACC,KAAK,CAAC,CAACC,SAAS;MAAA,6BAC1D,WAAOC,KAAS,EAAG;QAEjB,KAAI,CAACC,SAAS,CAACjB,OAAO,GAAC,6BAA6B;QACpD,KAAI,CAACiB,SAAS,CAAChB,KAAK,GAAC,SAAS;QAC9B,KAAI,CAACF,MAAM,CAACmB,aAAa,CAAC,iBAAiB,CAAC;MAC9C,CAAC;MAAA;QAAA;MAAA;IAAA,KAAEC,KAAK,IAAG;MACT,IAAI,CAACF,SAAS,CAACjB,OAAO,GAAC,kCAAkC;MACzD,IAAI,CAACiB,SAAS,CAAChB,KAAK,GAAC,QAAQ;IAC/B,CAAC,CACF;EACL;CAED;AAtCYL,wBAAwB,eALpCJ,SAAS,CAAC;EACT4B,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,GACW1B,wBAAwB,CAsCpC;SAtCYA,wBAAwB","names":["Component","FormControl","FormGroup","Validators","RegistroPersonaComponent","constructor","authService","router","message","state","id","required","nombre","apellido","celular","correo","email","password","minLength","ngOnInit","registrar","personaForm","value","subscribe","token","respuesta","navigateByUrl","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/bsvanegas/Documents/Workspace/deporte/ventaUniformeFrontend/src/app/pages/registro-persona/registro-persona.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IRespuesta } from 'src/app/interfaces/i-respuesta';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { PersonaService } from 'src/app/services/persona.service';\n\n@Component({\n  selector: 'app-registro-persona',\n  templateUrl: './registro-persona.component.html',\n  styleUrls: ['./registro-persona.component.css']\n})\nexport class RegistroPersonaComponent implements OnInit{\n\n  respuesta:IRespuesta={\n    message:'',\n    state:''\n  };\n\n  constructor(\n    public authService:AuthService,\n    private router:Router\n  ){}\n\n  personaForm=new FormGroup({\n    id:new FormControl('',Validators.required),\n    nombre:new FormControl('',Validators.required),\n    apellido:new FormControl('',Validators.required),\n    celular:new FormControl(''),\n    correo:new FormControl('',[Validators.required, Validators.email]),\n    password:new FormControl('',[Validators.required, Validators.minLength(8)])\n  });\n\n  ngOnInit(): void {\n  }\n\n  registrar(){\n      this.authService.registrar(this.personaForm.value).subscribe(\n        async (token:any)=>{\n\n          this.respuesta.message=\"Cuenta creada correctamente\";\n          this.respuesta.state=\"success\";\n          this.router.navigateByUrl('/inicio-session')\n        },(error)=>{\n          this.respuesta.message=\"Error no se pudo crear la cuenta\";\n          this.respuesta.state=\"danger\";\n        }\n      )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}