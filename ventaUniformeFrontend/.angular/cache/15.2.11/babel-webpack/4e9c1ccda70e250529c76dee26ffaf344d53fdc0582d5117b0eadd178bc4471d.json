{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/app/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ReservaService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.token = String(sessionStorage.getItem('token'));\n  }\n  reservar(reserva) {\n    const token = sessionStorage.getItem('token');\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    return this.httpClient.post(`${environment.urlApi}reserva/insert`, reserva, {\n      headers\n    });\n  }\n  static #_ = this.ɵfac = function ReservaService_Factory(t) {\n    return new (t || ReservaService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ReservaService,\n    factory: ReservaService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,WAAW,QAAQ,kCAAkC;;;AAK9D,OAAM,MAAOC,cAAc;EAIzBC,YACUC,UAAqB;IAArB,eAAU,GAAVA,UAAU;IAHpB,UAAK,GAAQC,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAMpD;EAEAC,QAAQ,CAACC,OAAW;IAClB,MAAMC,KAAK,GAAGJ,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IAC7C,MAAMI,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,eAAe,EAAE,UAAUF,KAAK,EAAE,CAAC;IAEzE,OAAO,IAAI,CAACN,UAAU,CAACS,IAAI,CAAC,GAAGZ,WAAW,CAACa,MAAM,gBAAgB,EAAEL,OAAO,EAAC;MAACE;IAAO,CAAC,CAAC;EACvF;EAAC;qBAfUT,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAa,SAAdb,cAAc;IAAAc,YAFb;EAAM","names":["HttpHeaders","environment","ReservaService","constructor","httpClient","String","sessionStorage","getItem","reservar","reserva","token","headers","set","post","urlApi","factory","providedIn"],"sourceRoot":"","sources":["/home/bsvanegas/Documents/Workspace/deporte/ventaUniformeFrontend/src/app/services/reserva/reserva.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/app/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReservaService {\n\n  token:string=String(sessionStorage.getItem('token'));\n\n  constructor(\n    private httpClient:HttpClient\n  ) { \n\n  }\n\n  reservar(reserva:any){\n    const token = sessionStorage.getItem('token');\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n\n    return this.httpClient.post(`${environment.urlApi}reserva/insert`, reserva,{headers});\n  }\n  \n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}